name: Deploy FastAPI to Lambda

on:
  push:
    branches:
      - master
    paths:
      - api-web-scraper/**
      - .github/workflows/deploy-api-seek-web-scraper.yml

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build and Push Docker Image to ECR
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        ECR_REPOSITORY: lambda-fastapi-web-scraper-repo
        IMAGE_TAG: latest
        REGION: ${{ secrets.AWS_REGION }}
      run: |
        ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
        IMAGE_URI=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
        
        docker build -t ${IMAGE_URI} api-web-scraper/.
        docker push ${IMAGE_URI}

    - name: Clean up Docker images
      run: docker system prune -af
    
    - name: Deploy to AWS Lambda
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        ECR_REPOSITORY: lambda-fastapi-web-scraper-repo
        REGION: ${{ secrets.AWS_REGION }}
      run: |
        IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${ECR_REPOSITORY}:latest
        aws lambda update-function-code \
          --function-name fastapi-web-scraper-lambda \
          --image-uri $IMAGE_URI \
          --region $REGION